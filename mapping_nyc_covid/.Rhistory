opacity = 0.7)
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
saveWidget(map_interactive, "nyc_covid_caserate_map.html")
R. version
R version
load("C:/Users/Work/Desktop/R_Projects/R_Shiny/.RData")
library(tidyverse)
library(vroom)
library(sf)
library(tigris)
library(leaflet)
library(htmlwidgets)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
#percentpos <- vroom("coronavirus-data-master/trends/percentpositive-by-modzcta.csv")
caserate <- vroom("caserate-by-modzcta.csv", delim = ",")   #>>Done
#read in modzcta shapefile and zcta conversion table
modzcta <- st_read('MODZCTA_2010.shp') #Done
zcta_conv <- vroom("https://raw.githubusercontent.com/nychealth/coronavirus-data/refs/heads/master/Geography-resources/ZCTA-to-MODZCTA.csv", delim = ",") #Done
caserates <- caserate %>% select(-c(2:7))
caserates_long <- caserates %>%
pivot_longer(2:178, names_to = "modzcta",
names_prefix = "CASERATE_", values_to = "caserate") ##Done
#merge covid data with zcta shapefile >> Done
all_modzcta <- geo_join(modzcta, caserates_long,
'MODZCTA', 'modzcta',
how = "inner")
# Done
all_modzcta <- inner_join(modzcta, caserates_long, by = c('MODZCTA'='modzcta'))
#NOTE: modzcta and zcta are not the same, as modzctas can encompass severall small zctas!
#code below *would* switch between, but multiple zctas can map to one modzcta, so leaving ....
# all_modzcta$MODZCTA <- zcta_conv$ZCTA[match(all_modzcta$MODZCTA, zcta_conv$MODZCTA)]
all_modzcta$MODZCTA <- zcta_conv$ZCTA[match(all_modzcta$MODZCTA, zcta_conv$MODZCTA)]
#convert week_ending from a character to a date
all_modzcta$week_ending <- as.factor(all_modzcta$week_ending)
#all_modzcta$week_ending <- strptime(all_modzcta$week_ending,format = "%m/%d/%Y") this part is not necessarily necessary
all_modzcta$week_ending <- as.Date(all_modzcta$week_ending,format = "%m/%d/%Y")
saveRDS(all_modzcta, "all_modzcta.RDS")
all_modzcta %>%
ggplot(aes(x=as.numeric(caserate))) +
geom_histogram(bins=50, fill='#69b3a2', color='white')
###MAKE INTERACTIVE MAP OF CASERATE
labels <- sprintf("<strong>%s</strong><br/>%g cases per 100,000 people", all_modzcta$MODZCTA, all_modzcta$caserate) %>%
lapply(htmltools::HTML)
pal <- colorBin(palette = "OrRd", 9, domain = all_modzcta$caserate)
all_modzcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet()
View(all_modzcta[[5]][[1]])
all_modzcta[[5]][[1]]
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
#Made the following change
#st_transform(crs = "+init=epsg:4326")
map_interactive <- all_modzcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
))
install.packages("pryr")
library(pryr)
mem_used()
all_modzcta_sf <- st_as_sf(all_modzcta, wkt = "geometry" )
all_modzcta_sf <- st_as_sf(all_modzcta, wkt = "geometry" )
library(tidyverse)
library(vroom)
library(sf)
library(tigris)
library(leaflet)
library(htmlwidgets)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
all_modzcta_sf <- st_as_sf(all_modzcta, wkt = "geometry" )
all_modzcta_sf %>%
st_transform(crs = st_crs(4326)) %>%
leaflet()
#Made the following change
#st_transform(crs = "+init=epsg:4326")
map_interactive <- all_modzcta_sf %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
map_interactive
all_modzcta_sf %>%
st_transform(crs = st_crs(4326)) %>%
leaflet()
small_zcta <- all_modzcta(r(:500))
small_zcta <- all_modzcta(r(0:500))
small_zcta <- all_modzcta %>% select(r(0:500))
help("select")
small_zcta <- all_modzcta %>% slice(c(0:500))
View(small_zcta)
View(small_zcta)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet()
map <- leaflet() %>%
addTiles() %>%
setView(lng = -74.0060, lat = 40.7128, zoom = 12) %>% # Set the map's initial view
addMarkers(lng = -74.0060, lat = 40.7128, popup = "New York City") # Add a marker
map
small_zcta$geometry %>% slice(c(:1))
small_zcta$geometry %>% slice(c(0:1))
small_zcta %>% slice(c(0:1))
View(modzcta[[3]][[1]])
modzcta[[3]][[1]][[1]][[1]]
trial <- small_zcta$geometry
polygon_sf <- st_read(wkt = trial, wkt = TRUE)
View(trial)
View(trial)
View(trial)
st_read(wkt = small_zcta$geometry, wkt = TRUE)
class(small_zcta)
class(small_zcta$geometry)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = trail, color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = trial, color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet()
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = small_zcta, color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5)
small_zcta %>% leaflet()
#Made the following change
#st_transform(crs = "+init=epsg:4326")
map_interactive <- small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(label = labels,
data = geometry,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
#Made the following change
#st_transform(crs = "+init=epsg:4326")
map_interactive <- small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(label = labels,
data = small_zcta,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
#Made the following change
#st_transform(crs = "+init=epsg:4326")
map_interactive <- small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(label = labels,
data = small_zcta$geometry,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
#Made the following change
#st_transform(crs = "+init=epsg:4326")
map_interactive <- small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = small_zcta, color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = small_zcta, color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
map_interactive
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = small_zcta, color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
all_modzcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "blue", weight = 2, opacity = 1, fillOpacity = 0.5) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
small_zcta %>% slice(c(0:1))
small_zcta [1,2]
small_zcta [3,2]
small_zcta [3,2][4,2]
small_zcta [3,2],[4,2]
small_zcta [3,2]&[4,2]
small_zcta [3,2]+[4,2]
small_zcta [[3,2][4,2]]
small_zcta [[3,2]][[4,2]]]
small_zcta [3]
small_zcta [1]
small_zcta <- all_modzcta %>% sample_n(1000)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
small_zcta <- all_modzcta %>% sample_n(10000)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
saveRDS(all_modzcta, "all_modzcta.RDS")
small_zcta <- all_modzcta %>% sample_n(5000)
small_zcta %>%
st_transform(crs = st_crs(4326)) %>%
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~ pal(caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE
)) %>%
addLegend("bottomright",
pal = pal,
values = all_modzcta$caserate,
title = "Cases Per 100,00",
opacity = 0.7)
saveRDS(small_zcta, "small_zcta.RDS")
shiny::runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
w <- all_modzcta %>%  filter(week_ending == input$date)
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
runApp('~/project_nyc_covid')
# Run the application
shinyApp(ui = ui, server = server)
# Define server logic required to draw a histogram
server <- function(input, output) {
week_zcta <- reactive({
w <- all_modzcta %>%  filter(week_ending == input$date)
return(w)
})
output$cases <- renderLeaflet({
pal <- colorBin(palette = "YlGn", 9, domain = all_modzcta$caserate)
labels = sprintf(
"<strong>%s</strong><br/>%g cases per 100,000 people",
week_zcta()$MODZCTA, week_zcta()$caserate) %>%
lapply(htmltools::HTML)
week_zcta() %>%
st_transform(crs = "+init=epsg:4326") %>%
leaflet() %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
setView(-73.9, 40.7, zoom = 10) %>%
addPolygons(label = labels,
stroke = FALSE,
smoothFactor = .5,
opacity = 1,
fillOpacity = 0.7,
fillColor = ~pal(week_zcta()$caserate),
highlightOptions = highlightOptions(weight = 5,
fillOpacity = 1,
color = "black",
opacity = 1,
bringToFront = TRUE)) %>%
addLegend("bottomright",
pal = pal,
values = ~caserate,
title = "Cases Per 100,000",
opacity = 0.7)
})
}
# Run the application
shinyApp(ui = ui, server = server)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Covid-19 NYC Trends by Modified ZCTA"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
tags$a(href="https://github.com/nychealth/coronavirus-data","Data Repository", target="_blank"),
h5(" All data metrics are aggregated by week (categorized by week ending
in date). Caserates indicates the percentage of people that tested for COVID-19
with a molecular test who tested positive. All data is sourced from the NYC
Department of Health."),
selectInput("date",
"Select a date (week ending in):",
choices = unique(all_modzcta$week_ending)
)
),
# Show a plot of the generated distribution
mainPanel(
tabPanel("Case Rate", leafletOutput("cases"))
)
)
)
# Run the application
shinyApp(ui = ui, server = server)
# Run the application
shinyApp(ui = ui, server = server)
~10
View(all_modzcta)
View(all_modzcta)
all_modzcta <- readRDS("all_modzcta.RDS")
# Run the application
shinyApp(ui = ui, server = server)
